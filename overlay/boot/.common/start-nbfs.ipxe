#!ipxe
set node_model qemu-arm
# This is provided by iPXE, extracted from BIOS information.
set node_submodel ${manufacturer}/${product}
echo Walt node model: ${node_model}
echo Walt node submodel: ${node_submodel}

# Variables
set kernel_url /kernel
set initrd_url /initrd
set walt_init /bin/walt-init

# Compute kernel command line args
set nbfs_root ${next-server}:/var/lib/walt/nodes/${mac}/fs
set nbfs_bootargs root=/dev/nbfs nbfsroot=${nbfs_root}
set walt_bootargs walt.node.model=${node_model} walt.server.ip=${next-server}

# Since a DHCP request has already been done by the 1st-stage script,
# we could theoretically set the network configuration statically here:
# set ip_conf ip=${ip}:${next-server}:${gateway}:${netmask}:${hostname}::off
# However, this may cause issues if the system has multiple interfaces and
# the image is using an initramfs.
# So let's keep it simple.
set ip_conf ip=dhcp

# BOOTIF is set by pxelinux to the MAC address of the interface used to boot,
# and is understood by Debian's initrd scripts.  Use the same syntax as pxelinux
# to be compatible.
set other_bootargs init=${walt_init} panic=30 ${ip_conf} BOOTIF=01-${mac:hexhyp}

set bootargs ${nbfs_bootargs} ${walt_bootargs} ${other_bootargs}

echo Loading initrd...
initrd ${initrd_url} || echo No initrd found

echo Loading kernel...
kernel ${kernel_url} initrd=initrd ${bootargs} || reboot

# boot
echo Booting kernel with parameters: ${bootargs}
boot
